plugins{
    id "java-library"
    id "java"
    id 'io.qameta.allure' version '2.7.0'
    id 'jacoco'
    
}
defaultTasks 'clean', 'test'

sourceSets {
    main {
        java {srcDir 'src'}
        resources {srcDir 'src'}
    }
    test {
        java {srcDir 'test'}
        resources {srcDir 'test'}
    }
}
group = 'com.aseem'
version = '1.0.0'

allure {
    version = "2.10.0"
    downloadLinkFormat = "https://dl.bintray.com/qameta/maven/io/qameta/allure/allure-commandline/%s/allure-commandline-%<s.zip"
}

repositories{
    mavenCentral()
}

dependencies{
    testImplementation('org.junit.jupiter:junit-jupiter:5.8.2')
    testImplementation('com.codeborne:selenide:6.3.4')
    testImplementation('io.qameta.allure:allure-selenide:2.17.3')
    testRuntimeOnly('org.slf4j:slf4j-simple:1.7.36')
    implementation('io.qameta.allure:allure-okhttp3:2.17.3')
}

task waitForGrid(type: Exec) {
    commandLine './waitForGrid.sh'
}

tasks.withType(Test){
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    testLogging {
		events "passed", "skipped", "failed"
	}
    maxParallelForks = (int) (Runtime.runtime.availableProcessors().intdiv(2)?: 1)
}
defaultTasks 'clean', 'check', 'test', 'install'


